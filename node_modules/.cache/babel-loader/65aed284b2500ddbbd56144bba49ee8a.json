{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Camer\\\\documents\\\\besag-york-mollie\\\\frontend\\\\src\\\\components\\\\bym.tsx\";\nimport * as React from 'react';\nimport '../css/bym.css';\nimport { Formik } from \"formik\";\nimport axios from 'axios';\n\nfunction SubmitForm() {\n  const file = document.getElementById(\"upload\");\n\n  if (file.files != null) {\n    const formData = new FormData();\n    formData.append(\"upload\", file.files[0]);\n    axios.post(\"http://localhost:8080/\", formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      if (response.data != null) {\n        alert(\"SUCCESS\");\n      }\n    });\n  }\n}\n\nexport const Bym = ({\n  action\n}) => {\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      data: '',\n      dataValues: '',\n      mean: '',\n      sd: ''\n    },\n    onSubmit: data => {\n      console.log(data);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, ({\n    values,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"model-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form-wrapper\",\n    action: \"/upload\",\n    encType: \"multipart/form-data\",\n    method: \"POST\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Data\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"data\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.data,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, \"Value\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"dataValues\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.dataValues,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mean\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Mean\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"mean\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.mean,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"std\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, \"Standard Deviation\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"sd\",\n    onChange: handleChange,\n    onBlur: handleBlur,\n    value: values.sd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    disabled: isSubmitting,\n    onClick: SubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, JSON.stringify(values, null, 2)))));\n};","map":{"version":3,"sources":["C:/Users/Camer/documents/besag-york-mollie/frontend/src/components/bym.tsx"],"names":["React","Formik","axios","SubmitForm","file","document","getElementById","files","formData","FormData","append","post","headers","then","response","data","alert","Bym","action","dataValues","mean","sd","console","log","values","handleChange","handleBlur","handleSubmit","isSubmitting","JSON","stringify"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport '../css/bym.css'\r\nimport {Formik} from \"formik\";\r\nimport axios  from 'axios'\r\n\r\n\r\ninterface FormProps {\r\n    action: string;\r\n}\r\n\r\n\r\n\r\nfunction SubmitForm() {\r\n    const file = document.getElementById(\"upload\") as HTMLInputElement;\r\n    if (file.files != null) {\r\n        const formData = new FormData();\r\n        formData.append(\"upload\", file.files[0]);\r\n        axios.post(\"http://localhost:8080/\", formData, {\r\n            headers: {'Content-Type': 'multipart/form-data'}\r\n        })\r\n            .then(response => {\r\n                if (response.data != null) {\r\n                    alert(\"SUCCESS\")\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const Bym: React.FC<FormProps> = ({action}) => {\r\n    return (\r\n\r\n        <Formik initialValues={{ data: '', dataValues: '', mean: '', sd: '' }}\r\n                onSubmit = {data => {\r\n                    console.log(data);\r\n                }}\r\n        >\r\n            {({\r\n                  values,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  handleSubmit,\r\n                  isSubmitting,\r\n              }) => (\r\n                <div className=\"model-container\">\r\n                    <form onSubmit={handleSubmit} className=\"form-wrapper\" action=\"/upload\"\r\n                          encType=\"multipart/form-data\" method=\"POST\">\r\n\r\n                        <label htmlFor=\"data\">Data</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"data\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.data}\r\n                        />\r\n\r\n                        <label htmlFor=\"value\">Value</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"dataValues\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.dataValues}\r\n                        />\r\n\r\n\r\n                        <label htmlFor=\"mean\">Mean</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"mean\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.mean}\r\n                        />\r\n\r\n                        <label htmlFor=\"std\">Standard Deviation</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"sd\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            value={values.sd}\r\n                        />\r\n\r\n                        <input type=\"submit\" value=\"Submit\" disabled={isSubmitting} onClick={SubmitForm}/>\r\n                        <pre>{JSON.stringify(values,null,2)}</pre>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}